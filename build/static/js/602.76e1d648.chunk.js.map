{"version":3,"file":"static/js/602.76e1d648.chunk.js","mappings":"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","sources":["pages/AddPatientRecord.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { patientAPI } from '../api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst AddPatientRecord = () => {\r\n  const { patientId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  \r\n  const [patientData, setPatientData] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    date: new Date().toISOString().slice(0, 10),\r\n    bloodPressure: { systolic: '', diastolic: '' },\r\n    heartRate: '',\r\n    weight: '',\r\n    glucoseLevel: '',\r\n    symptoms: '',\r\n    medications: '',\r\n    notes: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Only doctors should access this page\r\n    if (currentUser?.role !== 'doctor') {\r\n      setError('Access denied. Only doctors can add patient records.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchPatientData = async () => {\r\n      try {\r\n        const response = await patientAPI.getPatientById(patientId);\r\n        \r\n        if (response.data.success) {\r\n          setPatientData(response.data.data);\r\n        } else {\r\n          setError('Failed to fetch patient details');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching patient:', err);\r\n        setError('Failed to fetch patient details. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPatientData();\r\n  }, [currentUser, patientId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    if (name.includes('.')) {\r\n      const [parent, child] = name.split('.');\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [parent]: {\r\n          ...prev[parent],\r\n          [child]: value\r\n        }\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSubmitting(true);\r\n    \r\n    try {\r\n      const dataToSubmit = {\r\n        ...formData,\r\n        bloodPressure: {\r\n          systolic: formData.bloodPressure.systolic ? parseInt(formData.bloodPressure.systolic) : null,\r\n          diastolic: formData.bloodPressure.diastolic ? parseInt(formData.bloodPressure.diastolic) : null\r\n        },\r\n        heartRate: formData.heartRate ? parseInt(formData.heartRate) : null,\r\n        weight: formData.weight ? parseFloat(formData.weight) : null,\r\n        glucoseLevel: formData.glucoseLevel ? parseInt(formData.glucoseLevel) : null\r\n      };\r\n      \r\n      const response = await patientAPI.createPatientRecord(patientId, dataToSubmit);\r\n      \r\n      if (response.data.success) {\r\n        navigate(`/patients/${patientId}/records`);\r\n      } else {\r\n        setError(response.data.error || 'Failed to create record');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error creating health record:', err);\r\n      setError(err.response?.data?.error || 'Failed to create health record. Please try again.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading patient data...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-container\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-patient-record\">\r\n      <h1>Add Health Record for {patientData?.name}</h1>\r\n      <div className=\"patient-info\">\r\n        <p><strong>Patient:</strong> {patientData?.name}</p>\r\n        <p><strong>Email:</strong> {patientData?.email}</p>\r\n        {patientData?.gender && (\r\n          <p><strong>Gender:</strong> {patientData.gender}</p>\r\n        )}\r\n        {patientData?.dateOfBirth && (\r\n          <p><strong>Date of Birth:</strong> {new Date(patientData.dateOfBirth).toLocaleDateString()}</p>\r\n        )}\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            className=\"form-control\"\r\n            value={formData.date}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Blood Pressure (mmHg)</label>\r\n          <div className=\"blood-pressure-inputs\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"bloodPressure.systolic\"\r\n              placeholder=\"Systolic\"\r\n              className=\"form-control\"\r\n              value={formData.bloodPressure.systolic}\r\n              onChange={handleChange}\r\n              min=\"60\"\r\n              max=\"250\"\r\n            />\r\n            <span>/</span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"bloodPressure.diastolic\"\r\n              placeholder=\"Diastolic\"\r\n              className=\"form-control\"\r\n              value={formData.bloodPressure.diastolic}\r\n              onChange={handleChange}\r\n              min=\"40\"\r\n              max=\"150\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"heartRate\">Heart Rate (bpm)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"heartRate\"\r\n            name=\"heartRate\"\r\n            className=\"form-control\"\r\n            value={formData.heartRate}\r\n            onChange={handleChange}\r\n            min=\"30\"\r\n            max=\"220\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"weight\">Weight (kg)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"weight\"\r\n            name=\"weight\"\r\n            step=\"0.1\"\r\n            className=\"form-control\"\r\n            value={formData.weight}\r\n            onChange={handleChange}\r\n            min=\"20\"\r\n            max=\"500\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"glucoseLevel\">Glucose Level (mg/dL)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"glucoseLevel\"\r\n            name=\"glucoseLevel\"\r\n            className=\"form-control\"\r\n            value={formData.glucoseLevel}\r\n            onChange={handleChange}\r\n            min=\"20\"\r\n            max=\"600\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"symptoms\">Symptoms</label>\r\n          <textarea\r\n            id=\"symptoms\"\r\n            name=\"symptoms\"\r\n            className=\"form-control\"\r\n            value={formData.symptoms}\r\n            onChange={handleChange}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"medications\">Medications</label>\r\n          <textarea\r\n            id=\"medications\"\r\n            name=\"medications\"\r\n            className=\"form-control\"\r\n            value={formData.medications}\r\n            onChange={handleChange}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"notes\">Additional Notes</label>\r\n          <textarea\r\n            id=\"notes\"\r\n            name=\"notes\"\r\n            className=\"form-control\"\r\n            value={formData.notes}\r\n            onChange={handleChange}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div className=\"form-actions\">\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn btn-secondary\" \r\n            onClick={() => navigate(`/patients/${patientId}`)}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-primary\" \r\n            disabled={submitting}\r\n          >\r\n            {submitting ? 'Saving...' : 'Save Health Record'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPatientRecord; "],"names":["AddPatientRecord","patientId","useParams","navigate","useNavigate","currentUser","useAuth","patientData","setPatientData","useState","formData","setFormData","date","Date","toISOString","slice","bloodPressure","systolic","diastolic","heartRate","weight","glucoseLevel","symptoms","medications","notes","error","setError","loading","setLoading","submitting","setSubmitting","useEffect","role","async","response","patientAPI","getPatientById","data","success","err","console","fetchPatientData","handleChange","e","name","value","target","includes","parent","child","split","prev","_objectSpread","_jsx","className","children","_jsxs","email","gender","dateOfBirth","toLocaleDateString","onSubmit","preventDefault","dataToSubmit","parseInt","parseFloat","createPatientRecord","concat","_err$response","_err$response$data","htmlFor","type","id","onChange","required","placeholder","min","max","step","rows","onClick","disabled"],"sourceRoot":""}