{"version":3,"file":"static/js/552.db489c50.chunk.js","mappings":"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","sources":["pages/RecordHealth.jsx"],"sourcesContent":["// src/pages/RecordHealth.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { healthAPI } from '../api';\r\n\r\nconst RecordHealth = () => {\r\n  const [formData, setFormData] = useState({\r\n    date: new Date().toISOString().slice(0, 10),\r\n    bloodPressure: { systolic: '', diastolic: '' },\r\n    heartRate: '',\r\n    weight: '',\r\n    glucoseLevel: '',\r\n    symptoms: '',\r\n    medications: '',\r\n    notes: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    if (name.includes('.')) {\r\n      const [parent, child] = name.split('.');\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [parent]: {\r\n          ...prev[parent],\r\n          [child]: value\r\n        }\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const dataToSubmit = {\r\n        ...formData,\r\n        bloodPressure: {\r\n          systolic: formData.bloodPressure.systolic ? parseInt(formData.bloodPressure.systolic) : null,\r\n          diastolic: formData.bloodPressure.diastolic ? parseInt(formData.bloodPressure.diastolic) : null\r\n        },\r\n        heartRate: formData.heartRate ? parseInt(formData.heartRate) : null,\r\n        weight: formData.weight ? parseFloat(formData.weight) : null,\r\n        glucoseLevel: formData.glucoseLevel ? parseInt(formData.glucoseLevel) : null\r\n      };\r\n      \r\n      await healthAPI.recordHealthData(dataToSubmit);\r\n      navigate('/history');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to record health data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"record-health\">\r\n      <h1>Record Health Data</h1>\r\n      \r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            className=\"form-control\"\r\n            value={formData.date}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Blood Pressure (mmHg)</label>\r\n          <div className=\"blood-pressure-inputs\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"bloodPressure.systolic\"\r\n              placeholder=\"Systolic\"\r\n              className=\"form-control\"\r\n              value={formData.bloodPressure.systolic}\r\n              onChange={handleChange}\r\n              min=\"60\"\r\n              max=\"250\"\r\n            />\r\n            <span>/</span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"bloodPressure.diastolic\"\r\n              placeholder=\"Diastolic\"\r\n              className=\"form-control\"\r\n              value={formData.bloodPressure.diastolic}\r\n              onChange={handleChange}\r\n              min=\"40\"\r\n              max=\"150\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"heartRate\">Heart Rate (bpm)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"heartRate\"\r\n            name=\"heartRate\"\r\n            className=\"form-control\"\r\n            value={formData.heartRate}\r\n            onChange={handleChange}\r\n            min=\"30\"\r\n            max=\"220\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"weight\">Weight (kg)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"weight\"\r\n            name=\"weight\"\r\n            step=\"0.1\"\r\n            className=\"form-control\"\r\n            value={formData.weight}\r\n            onChange={handleChange}\r\n            min=\"20\"\r\n            max=\"500\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"glucoseLevel\">Glucose Level (mg/dL)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"glucoseLevel\"\r\n            name=\"glucoseLevel\"\r\n            className=\"form-control\"\r\n            value={formData.glucoseLevel}\r\n            onChange={handleChange}\r\n            min=\"20\"\r\n            max=\"600\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"symptoms\">Symptoms</label>\r\n          <textarea\r\n            id=\"symptoms\"\r\n            name=\"symptoms\"\r\n            className=\"form-control\"\r\n            value={formData.symptoms}\r\n            onChange={handleChange}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"medications\">Medications</label>\r\n          <textarea\r\n            id=\"medications\"\r\n            name=\"medications\"\r\n            className=\"form-control\"\r\n            value={formData.medications}\r\n            onChange={handleChange}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"notes\">Additional Notes</label>\r\n          <textarea\r\n            id=\"notes\"\r\n            name=\"notes\"\r\n            className=\"form-control\"\r\n            value={formData.notes}\r\n            onChange={handleChange}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div className=\"form-actions\">\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => navigate('/')}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Health Record'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecordHealth;"],"names":["RecordHealth","formData","setFormData","useState","date","Date","toISOString","slice","bloodPressure","systolic","diastolic","heartRate","weight","glucoseLevel","symptoms","medications","notes","error","setError","loading","setLoading","navigate","useNavigate","handleChange","e","name","value","target","includes","parent","child","split","prev","_objectSpread","_jsxs","className","children","_jsx","onSubmit","async","preventDefault","dataToSubmit","parseInt","parseFloat","healthAPI","recordHealthData","err","_err$response","_err$response$data","response","data","message","htmlFor","type","id","onChange","required","placeholder","min","max","step","rows","onClick","disabled"],"sourceRoot":""}