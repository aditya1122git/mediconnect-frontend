{"version":3,"file":"static/js/830.d0b35030.chunk.js","mappings":"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","sources":["pages/AdminUsers.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { adminAPI } from '../api';\r\n\r\nconst AdminUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [deleteError, setDeleteError] = useState('');\r\n  const [deleteSuccess, setDeleteSuccess] = useState('');\r\n  const [selectedRole, setSelectedRole] = useState('all');\r\n  const [adminPassword, setAdminPassword] = useState('');\r\n  const [showBulkDeleteModal, setShowBulkDeleteModal] = useState(false);\r\n  const [bulkDeleteType, setBulkDeleteType] = useState('');\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [showDeleteUserModal, setShowDeleteUserModal] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passwordEntered, setPasswordEntered] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [showBulkConfirmModal, setShowBulkConfirmModal] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // Extract role from URL query params\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const roleParam = params.get('role');\r\n    if (roleParam && ['doctor', 'patient'].includes(roleParam)) {\r\n      setSelectedRole(roleParam);\r\n    } else {\r\n      setSelectedRole('all');\r\n    }\r\n  }, [location.search]);\r\n\r\n  // Memoize fetchUsers to avoid eslint warnings\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      let response;\r\n      if (selectedRole === 'doctor') {\r\n        response = await adminAPI.getAllDoctors();\r\n      } else if (selectedRole === 'patient') {\r\n        response = await adminAPI.getAllPatients();\r\n      } else {\r\n        response = await adminAPI.getAllUsers();\r\n      }\r\n      \r\n      if (response.data && response.data.success) {\r\n        setUsers(response.data.data || []);\r\n      } else {\r\n        setError('Failed to fetch users');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching users:', err);\r\n      // Check for admin not found error\r\n      if (err.response?.data?.error?.includes('Admin user not found') || \r\n          err.response?.data?.message?.includes('Admin user not found')) {\r\n        setError('Your admin session has expired. Please sign in again.');\r\n        setTimeout(() => {\r\n          localStorage.removeItem('token');\r\n          window.location.href = '/login?session=expired';\r\n        }, 1500);\r\n        return;\r\n      }\r\n      setError('Failed to fetch users. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedRole]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [fetchUsers]);\r\n\r\n  const handleRoleChange = (e) => {\r\n    const role = e.target.value;\r\n    if (role === 'all') {\r\n      navigate('/admin/users');\r\n    } else {\r\n      navigate(`/admin/users?role=${role}`);\r\n    }\r\n  };\r\n\r\n  const openDeleteUserModal = (userId) => {\r\n    const user = users.find(u => u._id === userId);\r\n    if (user) {\r\n      setUserToDelete(user);\r\n      setShowDeleteUserModal(true);\r\n      setAdminPassword('');\r\n      setDeleteError('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async () => {    \r\n    try {\r\n      setIsDeleting(true);\r\n      setDeleteError('');\r\n      setDeleteSuccess('');\r\n      \r\n      console.log('Attempting to delete user without authentication');\r\n      \r\n      // Try the first method\r\n      try {\r\n        console.log('Attempting primary delete method with bypass-auth header');\r\n        const response = await adminAPI.deleteUser(userToDelete._id);\r\n        console.log('Delete user response:', response.data);\r\n        \r\n        if (response.data && response.data.success) {\r\n          setDeleteSuccess(`User ${userToDelete.name} deleted successfully`);\r\n          // Remove user from list\r\n          setUsers(users.filter(user => user._id !== userToDelete._id));\r\n          setShowConfirmModal(false);\r\n          return; // Exit early on success\r\n        }\r\n      } catch (firstError) {\r\n        console.log('First delete method failed, trying alternative method...');\r\n        console.log('Error details:', firstError);\r\n        \r\n        // Try the alternative method if the first one failed\r\n        try {\r\n          console.log('Attempting alternative force-delete method');\r\n          const altResponse = await adminAPI.deleteUserAlternative(userToDelete._id);\r\n          console.log('Alternative delete response:', altResponse.data);\r\n          \r\n          if (altResponse.data && altResponse.data.success) {\r\n            setDeleteSuccess(`User ${userToDelete.name} deleted successfully`);\r\n            // Remove user from list\r\n            setUsers(users.filter(user => user._id !== userToDelete._id));\r\n            setShowConfirmModal(false);\r\n            return; // Exit early on success\r\n          } else {\r\n            throw firstError; // Reuse the first error if the second method fails but doesn't throw\r\n          }\r\n        } catch (secondError) {\r\n          // If both methods fail, use the most informative error\r\n          console.log('Both delete methods failed');\r\n          console.log('Alternative method error:', secondError);\r\n          \r\n          // Choose the more informative error\r\n          throw secondError.response?.data?.error \r\n              ? secondError \r\n              : firstError;\r\n        }\r\n      }\r\n      \r\n      // If we get here, both methods failed but didn't throw errors\r\n      setDeleteError('Failed to delete user');\r\n    } catch (err) {\r\n      console.error('Error deleting user:', err);\r\n      let errorMessage = 'User deletion failed. Please try again.';\r\n      \r\n      if (err.response) {\r\n        const status = err.response.status;\r\n        console.log('Delete user error response status:', status);\r\n        console.log('Error response data:', JSON.stringify(err.response.data));\r\n        \r\n        if (err.response.data && err.response.data.error) {\r\n          errorMessage = err.response.data.error;\r\n          \r\n          // Handle common errors with user-friendly messages\r\n          if (errorMessage.toLowerCase().includes('password is required')) {\r\n            errorMessage = 'Server error: The system is still requiring password authentication. Please contact the administrator.';\r\n          } else if (errorMessage.toLowerCase().includes('auth') || \r\n              errorMessage.toLowerCase().includes('password')) {\r\n            errorMessage = 'Authentication error. Please reload the page and try again.';\r\n          } else if (status === 404) {\r\n            errorMessage = 'User could not be found. They may have been already deleted.';\r\n          }\r\n        }\r\n      }\r\n      \r\n      setDeleteError(errorMessage);\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const password = e.target.value;\r\n    setAdminPassword(password);\r\n    setPasswordEntered(password.length > 0);\r\n  };\r\n\r\n  const closeDeleteModal = () => {\r\n    setShowDeleteUserModal(false);\r\n    setShowConfirmModal(false);\r\n    setShowBulkDeleteModal(false);\r\n    setShowBulkConfirmModal(false);\r\n    setDeleteError('');\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setShowDeleteUserModal(false);\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const openBulkDeleteModal = (type) => {\r\n    setBulkDeleteType(type);\r\n    setShowBulkDeleteModal(true);\r\n    setAdminPassword('');\r\n  };\r\n\r\n  const handleBulkDeleteClick = () => {\r\n    setShowBulkDeleteModal(false);\r\n    setShowBulkConfirmModal(true);\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    try {\r\n      setIsDeleting(true);\r\n      setDeleteError('');\r\n      setDeleteSuccess('');\r\n      \r\n      console.log('Attempting bulk delete without authentication');\r\n      \r\n      let response;\r\n      if (bulkDeleteType === 'doctors') {\r\n        response = await adminAPI.deleteAllDoctors();\r\n      } else if (bulkDeleteType === 'patients') {\r\n        response = await adminAPI.deleteAllPatients();\r\n      } else {\r\n        setDeleteError('Invalid operation');\r\n        return;\r\n      }\r\n      \r\n      if (response.data && response.data.success) {\r\n        setDeleteSuccess(response.data.message || 'Bulk deletion completed successfully');\r\n        setShowBulkConfirmModal(false);\r\n        fetchUsers(); // Refresh the list\r\n      } else {\r\n        setDeleteError('Failed to complete operation');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error in bulk operation:', err);\r\n      let errorMessage = err.response?.data?.error || 'Operation failed. Please try again.';\r\n      \r\n      // Log detailed error info\r\n      if (err.response) {\r\n        const status = err.response.status;\r\n        console.log('Bulk delete error response status:', status);\r\n        console.log('Error response data:', JSON.stringify(err.response.data));\r\n        \r\n        // Handle common errors with user-friendly messages\r\n        if (errorMessage.toLowerCase().includes('password is required')) {\r\n          errorMessage = 'Server error: The system is still requiring password authentication. Please contact the administrator.';\r\n        } else if (errorMessage.toLowerCase().includes('auth') || \r\n            errorMessage.toLowerCase().includes('password')) {\r\n          errorMessage = 'Authentication error. Please reload the page and try again.';\r\n        }\r\n      }\r\n      \r\n      setDeleteError(errorMessage);\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handlePasswordKeyPress = (e, callback) => {\r\n    // If Enter key is pressed and password is entered, trigger the callback\r\n    if (e.key === 'Enter' && adminPassword.trim()) {\r\n      e.preventDefault();\r\n      callback();\r\n    }\r\n  };\r\n\r\n  // Password input eye icon\r\n  const EyeIcon = ({ show }) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" \r\n      className=\"bi bi-eye\" viewBox=\"0 0 16 16\">\r\n      {show ? (\r\n        <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\"/>\r\n      ) : (\r\n        <>\r\n          <path d=\"M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 0 0-2.79.588l.77.771A5.944 5.944 0 0 1 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z\"/>\r\n          <path d=\"M11.297 9.176a3.5 3.5 0 0 0-4.474-4.474l.823.823a2.5 2.5 0 0 1 2.829 2.829l.822.822zm-2.943 1.299.822.822a3.5 3.5 0 0 1-4.474-4.474l.823.823a2.5 2.5 0 0 0 2.829 2.829z\"/>\r\n          <path d=\"M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 0 0 1.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 0 1 8 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709zm10.296 8.884-12-12 .708-.708 12 12-.708.708z\"/>\r\n        </>\r\n      )}\r\n    </svg>\r\n  );\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading users...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-users\">\r\n      <div className=\"page-header d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h1>User Management</h1>\r\n          <p className=\"text-muted\">Manage all users in the system</p>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/admin/dashboard\" className=\"btn btn-secondary\">\r\n            Back to Dashboard\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {deleteError && <div className=\"alert alert-danger\">{deleteError}</div>}\r\n      {deleteSuccess && <div className=\"alert alert-success\">{deleteSuccess}</div>}\r\n\r\n      <div className=\"filters mb-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"roleFilter\">Filter by Role:</label>\r\n              <select\r\n                id=\"roleFilter\"\r\n                className=\"form-control\"\r\n                value={selectedRole}\r\n                onChange={handleRoleChange}\r\n              >\r\n                <option value=\"all\">All Users</option>\r\n                <option value=\"doctor\">Doctors Only</option>\r\n                <option value=\"patient\">Patients Only</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"bulk-actions mt-4\">\r\n              {selectedRole === 'doctor' && (\r\n                <button \r\n                  className=\"btn btn-danger\" \r\n                  onClick={() => openBulkDeleteModal('doctors')}\r\n                  disabled={isDeleting}\r\n                >\r\n                  Delete All Doctors\r\n                </button>\r\n              )}\r\n              {selectedRole === 'patient' && (\r\n                <button \r\n                  className=\"btn btn-danger\" \r\n                  onClick={() => openBulkDeleteModal('patients')}\r\n                  disabled={isDeleting}\r\n                >\r\n                  Delete All Patients\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {users.length === 0 ? (\r\n        <div className=\"no-users\">\r\n          <p>No users found.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n                <th>Created</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map(user => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    <span className={`badge badge-${user.role === 'doctor' ? 'primary' : 'success'}`}>\r\n                      {user.role && user.role.charAt(0).toUpperCase() + user.role.slice(1)}\r\n                    </span>\r\n                  </td>\r\n                  <td>{new Date(user.createdAt).toLocaleDateString()}</td>\r\n                  <td>\r\n                    <div className=\"btn-group\">\r\n                      <Link \r\n                        to={`/admin/users/${user._id}`} \r\n                        className=\"btn btn-sm btn-info\"\r\n                      >\r\n                        View\r\n                      </Link>\r\n                      <button \r\n                        className=\"btn btn-sm btn-danger\" \r\n                        onClick={() => openDeleteUserModal(user._id)}\r\n                        disabled={isDeleting}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete User Modal */}\r\n      {showDeleteUserModal && userToDelete && (\r\n        <div className=\"modal show\" style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n          <div className=\"modal-dialog modal-dialog-centered\" style={{ maxWidth: '400px' }}>\r\n            <div className=\"modal-content\" style={{ borderRadius: '8px' }}>\r\n              <div className=\"p-0\">\r\n                <div className=\"bg-danger text-white p-2 position-relative\" style={{ borderRadius: '8px 8px 0 0' }}>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"mr-2\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                      <path d=\"M5.255 5.786a.237.237 0 0 0 0 .334c.78.618 2.519 1.764 3.585 1.764s2.798-1.146 3.585-1.764a.237.237 0 0 0 0-.334c-.78-.618-2.519-1.764-3.585-1.764s-2.798 1.146-3.585 1.764z\"/>\r\n                    </svg>\r\n                    <h5 className=\"modal-title m-0 font-weight-bold\">Delete User</h5>\r\n                  </div>\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"close position-absolute text-white\" \r\n                    style={{ top: '8px', right: '12px' }}\r\n                    onClick={closeDeleteModal} \r\n                    disabled={isDeleting}\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"p-3\">\r\n                  {/* User Info */}\r\n                  <div className=\"bg-light border rounded p-2 mb-3 text-center\">\r\n                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                      <div \r\n                        className=\"rounded-circle text-white d-flex align-items-center justify-content-center mr-2\"\r\n                        style={{ \r\n                          width: '40px', \r\n                          height: '40px', \r\n                          fontSize: '18px',\r\n                          backgroundColor: '#007bff' \r\n                        }}\r\n                      >\r\n                        {userToDelete.name?.charAt(0).toUpperCase() || 'U'}\r\n                      </div>\r\n                      <div className=\"text-left\">\r\n                        <h6 className=\"mb-0 font-weight-bold\">{userToDelete.name}</h6>\r\n                        <p className=\"mb-0 small text-muted\">{userToDelete.email}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Warning */}\r\n                  <div className=\"alert alert-warning py-1 px-2 mb-3\" style={{ backgroundColor: '#fff3cd', border: '1px solid #ffeeba' }}>\r\n                    <p className=\"mb-0 text-center small\" style={{ color: '#ff8800' }}>\r\n                      <strong>Warning:</strong> This will permanently delete this user and all their data.\r\n                    </p>\r\n                  </div>\r\n\r\n                  {/* Error Message */}\r\n                  {deleteError && (\r\n                    <div className=\"alert alert-danger py-1 px-2 mb-3 text-center small\">\r\n                      {deleteError}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Action Buttons */}\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"btn btn-success px-3\"\r\n                      style={{ borderRadius: '25px', width: '45%' }}\r\n                      onClick={closeDeleteModal}\r\n                      disabled={isDeleting}\r\n                    >\r\n                      CANCEL\r\n                    </button>\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"btn btn-danger px-3\"\r\n                      style={{ \r\n                        borderRadius: '25px', \r\n                        width: '45%', \r\n                        backgroundColor: '#e74c3c'\r\n                      }}\r\n                      onClick={handleDeleteClick}\r\n                      disabled={isDeleting}\r\n                    >\r\n                      DELETE USER\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Final Confirmation Modal */}\r\n      {showConfirmModal && userToDelete && (\r\n        <div className=\"modal show\" style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n          <div className=\"modal-dialog modal-sm modal-dialog-centered\">\r\n            <div className=\"modal-content\" style={{ borderRadius: '8px' }}>\r\n              <div className=\"p-0\">\r\n                <div className=\"bg-danger text-white p-2 position-relative\" style={{ borderRadius: '8px 8px 0 0' }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    <h5 className=\"modal-title m-0 font-weight-bold\">Confirm Deletion</h5>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"p-3 text-center\">\r\n                  <p>Are you sure you want to delete this user?</p>\r\n                  \r\n                  {deleteError && (\r\n                    <div className=\"alert alert-danger py-1 px-2 mb-3 text-center small\">\r\n                      {deleteError}\r\n                    </div>\r\n                  )}\r\n\r\n                  <button \r\n                    type=\"button\"\r\n                    className=\"btn btn-danger px-5 py-2 text-center d-flex justify-content-center align-items-center\"\r\n                    style={{ \r\n                      borderRadius: '25px',\r\n                      backgroundColor: '#e74c3c',\r\n                      width: '80%',\r\n                      margin: '0 auto'\r\n                    }}\r\n                    onClick={handleDeleteUser}\r\n                    disabled={isDeleting}\r\n                  >\r\n                    {isDeleting ? \"DELETING...\" : \"CONFIRM\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Bulk Delete Modal */}\r\n      {showBulkDeleteModal && (\r\n        <div className=\"modal show\" style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n          <div className=\"modal-dialog modal-dialog-centered\" style={{ maxWidth: '400px' }}>\r\n            <div className=\"modal-content\" style={{ borderRadius: '8px' }}>\r\n              <div className=\"p-0\">\r\n                <div className=\"bg-danger text-white p-2 position-relative\" style={{ borderRadius: '8px 8px 0 0' }}>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"mr-2\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                      <path d=\"M5.255 5.786a.237.237 0 0 0 0 .334c.78.618 2.519 1.764 3.585 1.764s2.798-1.146 3.585-1.764a.237.237 0 0 0 0-.334c-.78-.618-2.519-1.764-3.585-1.764s-2.798 1.146-3.585 1.764z\"/>\r\n                    </svg>\r\n                    <h5 className=\"modal-title m-0 font-weight-bold\">Delete All {bulkDeleteType}</h5>\r\n                  </div>\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"close position-absolute text-white\" \r\n                    style={{ top: '8px', right: '12px' }}\r\n                    onClick={() => setShowBulkDeleteModal(false)} \r\n                    disabled={isDeleting}\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"p-3\">\r\n                  {/* Warning */}\r\n                  <div className=\"alert alert-warning py-1 px-2 mb-3\" style={{ backgroundColor: '#fff3cd', border: '1px solid #ffeeba' }}>\r\n                    <p className=\"mb-0 text-center small\" style={{ color: '#ff8800' }}>\r\n                      <strong>Warning:</strong> This will permanently delete all {bulkDeleteType}.\r\n                    </p>\r\n                  </div>\r\n\r\n                  {/* Error Message */}\r\n                  {deleteError && (\r\n                    <div className=\"alert alert-danger py-1 px-2 mb-3 text-center small\">\r\n                      {deleteError}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Action Buttons */}\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"btn btn-success px-3\"\r\n                      style={{ borderRadius: '25px', width: '45%' }}\r\n                      onClick={() => setShowBulkDeleteModal(false)}\r\n                      disabled={isDeleting}\r\n                    >\r\n                      CANCEL\r\n                    </button>\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"btn btn-danger px-3\"\r\n                      style={{ \r\n                        borderRadius: '25px', \r\n                        width: '45%', \r\n                        backgroundColor: '#e74c3c'\r\n                      }}\r\n                      onClick={handleBulkDeleteClick}\r\n                      disabled={isDeleting}\r\n                    >\r\n                      DELETE ALL\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Bulk Confirm Modal */}\r\n      {showBulkConfirmModal && (\r\n        <div className=\"modal show\" style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n          <div className=\"modal-dialog modal-sm modal-dialog-centered\">\r\n            <div className=\"modal-content\" style={{ borderRadius: '8px' }}>\r\n              <div className=\"p-0\">\r\n                <div className=\"bg-danger text-white p-2 position-relative\" style={{ borderRadius: '8px 8px 0 0' }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    <h5 className=\"modal-title m-0 font-weight-bold\">Confirm Deletion</h5>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"p-3 text-center\">\r\n                  <p>Are you sure you want to delete all {bulkDeleteType}?</p>\r\n                  \r\n                  {deleteError && (\r\n                    <div className=\"alert alert-danger py-1 px-2 mb-3 text-center small\">\r\n                      {deleteError}\r\n                    </div>\r\n                  )}\r\n\r\n                  <button \r\n                    type=\"button\"\r\n                    className=\"btn btn-danger px-5 py-2 text-center d-flex justify-content-center align-items-center\"\r\n                    style={{ \r\n                      borderRadius: '25px',\r\n                      backgroundColor: '#e74c3c',\r\n                      width: '80%',\r\n                      margin: '0 auto'\r\n                    }}\r\n                    onClick={handleBulkDelete}\r\n                    disabled={isDeleting}\r\n                  >\r\n                    {isDeleting ? \"PROCESSING...\" : \"CONFIRM\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUsers; "],"names":["AdminUsers","_userToDelete$name","users","setUsers","useState","loading","setLoading","error","setError","deleteError","setDeleteError","deleteSuccess","setDeleteSuccess","selectedRole","setSelectedRole","adminPassword","setAdminPassword","showBulkDeleteModal","setShowBulkDeleteModal","bulkDeleteType","setBulkDeleteType","isDeleting","setIsDeleting","showDeleteUserModal","setShowDeleteUserModal","userToDelete","setUserToDelete","showPassword","setShowPassword","passwordEntered","setPasswordEntered","showConfirmModal","setShowConfirmModal","showBulkConfirmModal","setShowBulkConfirmModal","location","useLocation","navigate","useNavigate","useEffect","roleParam","URLSearchParams","search","get","includes","fetchUsers","useCallback","async","response","adminAPI","getAllDoctors","getAllPatients","getAllUsers","data","success","err","_err$response","_err$response$data","_err$response$data$er","_err$response2","_err$response2$data","_err$response2$data$m","console","message","setTimeout","localStorage","removeItem","window","href","closeDeleteModal","openBulkDeleteModal","type","_jsx","className","children","_jsxs","Link","to","htmlFor","id","value","onChange","e","role","target","concat","onClick","disabled","length","map","user","name","email","charAt","toUpperCase","slice","Date","createdAt","toLocaleDateString","_id","userId","find","u","openDeleteUserModal","style","display","backgroundColor","maxWidth","borderRadius","xmlns","width","height","fill","viewBox","d","top","right","fontSize","border","color","handleDeleteClick","margin","log","deleteUser","filter","firstError","altResponse","deleteUserAlternative","secondError","_secondError$response","_secondError$response2","errorMessage","status","JSON","stringify","toLowerCase","handleBulkDeleteClick","deleteAllDoctors","deleteAllPatients","_err$response3","_err$response3$data"],"sourceRoot":""}