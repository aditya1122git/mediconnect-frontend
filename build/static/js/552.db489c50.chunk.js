"use strict";(self.webpackChunkmediconnect_frontend=self.webpackChunkmediconnect_frontend||[]).push([[552],{552:(e,s,a)=>{a.r(s),a.d(s,{default:()=>i});var l=a(379),t=a(43),o=a(216),r=a(996),n=a(579);const i=()=>{const[e,s]=(0,t.useState)({date:(new Date).toISOString().slice(0,10),bloodPressure:{systolic:"",diastolic:""},heartRate:"",weight:"",glucoseLevel:"",symptoms:"",medications:"",notes:""}),[a,i]=(0,t.useState)(""),[c,d]=(0,t.useState)(!1),m=(0,o.Zp)(),u=e=>{const{name:a,value:t}=e.target;if(a.includes(".")){const[e,o]=a.split(".");s((s=>(0,l.A)((0,l.A)({},s),{},{[e]:(0,l.A)((0,l.A)({},s[e]),{},{[o]:t})})))}else s((e=>(0,l.A)((0,l.A)({},e),{},{[a]:t})))};return(0,n.jsxs)("div",{className:"record-health",children:[(0,n.jsx)("h1",{children:"Record Health Data"}),a&&(0,n.jsx)("div",{className:"alert alert-danger",children:a}),(0,n.jsxs)("form",{onSubmit:async s=>{s.preventDefault(),i(""),d(!0);try{const s=(0,l.A)((0,l.A)({},e),{},{bloodPressure:{systolic:e.bloodPressure.systolic?parseInt(e.bloodPressure.systolic):null,diastolic:e.bloodPressure.diastolic?parseInt(e.bloodPressure.diastolic):null},heartRate:e.heartRate?parseInt(e.heartRate):null,weight:e.weight?parseFloat(e.weight):null,glucoseLevel:e.glucoseLevel?parseInt(e.glucoseLevel):null});await r.jz.recordHealthData(s),m("/history")}catch(o){var a,t;i((null===(a=o.response)||void 0===a||null===(t=a.data)||void 0===t?void 0:t.message)||"Failed to record health data. Please try again.")}finally{d(!1)}},children:[(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{htmlFor:"date",children:"Date"}),(0,n.jsx)("input",{type:"date",id:"date",name:"date",className:"form-control",value:e.date,onChange:u,required:!0})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{children:"Blood Pressure (mmHg)"}),(0,n.jsxs)("div",{className:"blood-pressure-inputs",children:[(0,n.jsx)("input",{type:"number",name:"bloodPressure.systolic",placeholder:"Systolic",className:"form-control",value:e.bloodPressure.systolic,onChange:u,min:"60",max:"250"}),(0,n.jsx)("span",{children:"/"}),(0,n.jsx)("input",{type:"number",name:"bloodPressure.diastolic",placeholder:"Diastolic",className:"form-control",value:e.bloodPressure.diastolic,onChange:u,min:"40",max:"150"})]})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{htmlFor:"heartRate",children:"Heart Rate (bpm)"}),(0,n.jsx)("input",{type:"number",id:"heartRate",name:"heartRate",className:"form-control",value:e.heartRate,onChange:u,min:"30",max:"220"})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{htmlFor:"weight",children:"Weight (kg)"}),(0,n.jsx)("input",{type:"number",id:"weight",name:"weight",step:"0.1",className:"form-control",value:e.weight,onChange:u,min:"20",max:"500"})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{htmlFor:"glucoseLevel",children:"Glucose Level (mg/dL)"}),(0,n.jsx)("input",{type:"number",id:"glucoseLevel",name:"glucoseLevel",className:"form-control",value:e.glucoseLevel,onChange:u,min:"20",max:"600"})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{htmlFor:"symptoms",children:"Symptoms"}),(0,n.jsx)("textarea",{id:"symptoms",name:"symptoms",className:"form-control",value:e.symptoms,onChange:u,rows:"3"})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{htmlFor:"medications",children:"Medications"}),(0,n.jsx)("textarea",{id:"medications",name:"medications",className:"form-control",value:e.medications,onChange:u,rows:"3"})]}),(0,n.jsxs)("div",{className:"form-group",children:[(0,n.jsx)("label",{htmlFor:"notes",children:"Additional Notes"}),(0,n.jsx)("textarea",{id:"notes",name:"notes",className:"form-control",value:e.notes,onChange:u,rows:"3"})]}),(0,n.jsxs)("div",{className:"form-actions",children:[(0,n.jsx)("button",{type:"button",className:"btn btn-secondary",onClick:()=>m("/"),children:"Cancel"}),(0,n.jsx)("button",{type:"submit",className:"btn btn-primary",disabled:c,children:c?"Saving...":"Save Health Record"})]})]})]})}}}]);
//# sourceMappingURL=552.db489c50.chunk.js.map