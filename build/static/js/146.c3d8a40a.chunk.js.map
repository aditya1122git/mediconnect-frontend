{"version":3,"file":"static/js/146.c3d8a40a.chunk.js","mappings":"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","sources":["pages/PatientRecords.jsx","components/HealthSummary.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport { patientAPI, healthAPI } from '../api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport HealthSummary from '../components/HealthSummary';\r\n\r\n// Icons for health metrics\r\nconst icons = {\r\n  heart: \"❤️\",\r\n  bloodPressure: \"🩸\",\r\n  weight: \"⚖️\",\r\n  glucose: \"🔬\",\r\n  symptoms: \"🤒\",\r\n  medications: \"💊\",\r\n  notes: \"📋\",\r\n  calendar: \"📅\"\r\n};\r\n\r\n// Function to capitalize first letter of each word\r\nconst capitalizeWords = (str) => {\r\n  if (!str) return '';\r\n  return str.split(' ')\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n    .join(' ');\r\n};\r\n\r\nconst PatientRecords = () => {\r\n  const { patientId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  \r\n  const [patient, setPatient] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [selectedRecord, setSelectedRecord] = useState(null);\r\n  const [confirmDelete, setConfirmDelete] = useState(null);\r\n  const [deleteLoading, setDeleteLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Only doctors should access this page\r\n    if (currentUser?.role !== 'doctor') {\r\n      setError('Access denied. Only doctors can view patient records.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch patient details\r\n        const patientResponse = await patientAPI.getPatientById(patientId);\r\n        \r\n        if (patientResponse.data.success) {\r\n          setPatient(patientResponse.data.data);\r\n        } else {\r\n          setError('Failed to fetch patient details');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Fetch patient's health records\r\n        const recordsResponse = await patientAPI.getPatientRecords(patientId);\r\n        \r\n        if (recordsResponse.data.success) {\r\n          setRecords(recordsResponse.data.data);\r\n        } else {\r\n          setError('Failed to fetch health records');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n        setError('Failed to fetch data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [currentUser, patientId]);\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const handleRecordClick = (record) => {\r\n    setSelectedRecord(record === selectedRecord ? null : record);\r\n  };\r\n\r\n  const handleDeleteClick = (e, record) => {\r\n    e.stopPropagation(); // Prevent triggering the handleRecordClick\r\n    setConfirmDelete(record);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (!confirmDelete) return;\r\n    \r\n    try {\r\n      setDeleteLoading(true);\r\n      console.log('Deleting health record with ID:', confirmDelete._id);\r\n      \r\n      // Try the delete operation\r\n      await healthAPI.deleteHealthRecord(confirmDelete._id);\r\n      \r\n      // Remove the record from state\r\n      setRecords(prevRecords => \r\n        prevRecords.filter(record => record._id !== confirmDelete._id)\r\n      );\r\n      \r\n      // Reset states\r\n      setConfirmDelete(null);\r\n      setSelectedRecord(null);\r\n      \r\n    } catch (err) {\r\n      console.error('Error details:', err.response?.data || err.message);\r\n      setError(err.response?.data?.error || 'Failed to delete record');\r\n    } finally {\r\n      setDeleteLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setConfirmDelete(null);\r\n  };\r\n\r\n  // Check if doctor can delete the record (only records created by this doctor)\r\n  const canDelete = (record) => {\r\n    if (!currentUser || !record) return false;\r\n    \r\n    // Doctors can only delete records they created\r\n    if (currentUser.role === 'doctor') {\r\n      return record.doctor && record.doctor._id === currentUser.id;\r\n    }\r\n    \r\n    return false;\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading patient records...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-container\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"patient-records\">\r\n      {confirmDelete && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <h2>Confirm Delete</h2>\r\n            <p>Are you sure you want to delete this health record from {formatDate(confirmDelete.date)}?</p>\r\n            <p>This action cannot be undone.</p>\r\n            <div className=\"modal-actions\">\r\n              <button \r\n                className=\"btn btn-danger\" \r\n                onClick={handleConfirmDelete}\r\n                disabled={deleteLoading}\r\n              >\r\n                {deleteLoading ? 'Deleting...' : 'Delete'}\r\n              </button>\r\n              <button \r\n                className=\"btn btn-secondary\" \r\n                onClick={handleCancelDelete}\r\n                disabled={deleteLoading}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"page-header\">\r\n        <h1>Health Records for {capitalizeWords(patient?.name)}</h1>\r\n        <Link \r\n          to={`/patients/${patientId}/add-record`}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Add New Record\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"patient-info med-card\">\r\n        <h2 className=\"med-card-title\">Patient Information</h2>\r\n        <p><strong>Name:</strong> {capitalizeWords(patient?.name)}</p>\r\n        <p><strong>Email:</strong> {patient?.email}</p>\r\n        {patient?.gender && (\r\n          <p><strong>Gender:</strong> {capitalizeWords(patient.gender)}</p>\r\n        )}\r\n        {patient?.dateOfBirth && (\r\n          <p><strong>Date of Birth:</strong> {formatDate(patient.dateOfBirth)}</p>\r\n        )}\r\n      </div>\r\n      \r\n      {selectedRecord && (\r\n        <div className=\"selected-record-details\">\r\n          <HealthSummary summary={{}} selectedEntry={selectedRecord} />\r\n        </div>\r\n      )}\r\n      \r\n      {records.length === 0 ? (\r\n        <div className=\"no-records med-card\">\r\n          <p>No health records found for this patient.</p>\r\n          <button \r\n            className=\"btn btn-primary\" \r\n            onClick={() => navigate(`/patients/${patientId}/add-record`)}\r\n          >\r\n            Create First Record\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"recent-entries\">\r\n          <h2 className=\"med-card-title\">Health Records</h2>\r\n          <div className=\"entries-list animate-stagger\">\r\n            {records.map(record => (\r\n              <div \r\n                key={record._id} \r\n                className={`med-card entry-card ${selectedRecord === record ? 'selected' : ''}`}\r\n                onClick={() => handleRecordClick(record)}\r\n              >\r\n                <h3>\r\n                  <div className=\"entry-date-section\">\r\n                    {formatDate(record.date)}\r\n                    <span className=\"recorded-by\">\r\n                      {record.doctor ? `Recorded by Dr. ${capitalizeWords(record.doctor.name || 'Unknown')}` : 'Self-recorded'}\r\n                    </span>\r\n                  </div>\r\n                </h3>\r\n                \r\n                <div className=\"entry-details\">\r\n                  {record.bloodPressure && (\r\n                    <div>\r\n                      <span className=\"health-icon blood-pressure\">{icons.bloodPressure}</span>\r\n                      Blood Pressure: {record.bloodPressure.systolic}/{record.bloodPressure.diastolic}\r\n                    </div>\r\n                  )}\r\n                  {record.heartRate && (\r\n                    <div>\r\n                      <span className=\"health-icon heart\">{icons.heart}</span>\r\n                      Heart Rate: {record.heartRate} bpm\r\n                    </div>\r\n                  )}\r\n                  {record.weight && (\r\n                    <div>\r\n                      <span className=\"health-icon weight\">{icons.weight}</span>\r\n                      Weight: {record.weight} kg\r\n                    </div>\r\n                  )}\r\n                  {record.glucoseLevel && (\r\n                    <div>\r\n                      <span className=\"health-icon glucose\">{icons.glucose}</span>\r\n                      Glucose: {record.glucoseLevel} mg/dL\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* Additional health information when selected */}\r\n                  {selectedRecord === record && (\r\n                    <div className=\"expanded-details\">\r\n                      {record.symptoms && (\r\n                        <div>\r\n                          <span className=\"health-icon symptoms\">{icons.symptoms}</span>\r\n                          <strong>Symptoms:</strong> {record.symptoms}\r\n                        </div>\r\n                      )}\r\n                      {record.medications && (\r\n                        <div>\r\n                          <span className=\"health-icon medications\">{icons.medications}</span>\r\n                          <strong>Medications:</strong> {record.medications}\r\n                        </div>\r\n                      )}\r\n                      {record.notes && (\r\n                        <div>\r\n                          <span className=\"health-icon notes\">{icons.notes}</span>\r\n                          <strong>Notes:</strong> {record.notes}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* Delete button */}\r\n                  {canDelete(record) && (\r\n                    <div className=\"delete-entry-container\">\r\n                      <button \r\n                        className=\"btn btn-delete-entry\" \r\n                        onClick={(e) => handleDeleteClick(e, record)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"back-link\">\r\n        <Link to=\"/patients\">Back to Patients List</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientRecords; ","// src/components/HealthSummary.js\r\nimport React from 'react';\r\n\r\n// Icons for health metrics\r\nconst icons = {\r\n  heart: \"❤️\",\r\n  bloodPressure: \"🩸\",\r\n  weight: \"⚖️\",\r\n  glucose: \"🔬\"\r\n};\r\n\r\nconst HealthSummary = ({ summary, selectedEntry }) => {\r\n  // Use selected entry if available, otherwise use summary data\r\n  const displayData = selectedEntry || summary;\r\n  \r\n  if (!displayData || Object.keys(displayData).length === 0) {\r\n    return (\r\n      <div className=\"health-summary empty-summary animate-fade-in\">\r\n        <h2 className=\"med-card-title\">Health Summary</h2>\r\n        <p>No health data recorded yet. Start by recording your health information.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Check if we're displaying a selected entry or summary data\r\n  const isSelectedEntry = !!selectedEntry;\r\n  \r\n  return (\r\n    <div className=\"health-summary animate-slide-in\">\r\n      <h2 className=\"med-card-title\">\r\n        {isSelectedEntry ? 'Selected Health Record' : 'Health Summary'}\r\n        {isSelectedEntry && (\r\n          <span className=\"summary-date\">\r\n            {new Date(selectedEntry.date).toLocaleDateString()}\r\n          </span>\r\n        )}\r\n      </h2>\r\n      \r\n      <div className=\"summary-grid animate-stagger\">\r\n        {(displayData.bloodPressure?.systolic !== null && displayData.bloodPressure?.diastolic !== null) && (\r\n          <div className=\"summary-card\">\r\n            <div className=\"summary-header\">\r\n              <span className=\"health-icon blood-pressure\">{icons.bloodPressure}</span>\r\n              <h3>Blood Pressure</h3>\r\n            </div>\r\n            <div className=\"summary-value\">{displayData.bloodPressure.systolic}/{displayData.bloodPressure.diastolic}</div>\r\n            <div className=\"summary-detail\">\r\n              <span>{isSelectedEntry ? 'Exact value' : 'Latest reading'}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {displayData.heartRate !== null && (\r\n          <div className=\"summary-card\">\r\n            <div className=\"summary-header\">\r\n              <span className=\"health-icon heart\">{icons.heart}</span>\r\n              <h3>Heart Rate</h3>\r\n            </div>\r\n            <div className=\"summary-value\">{displayData.heartRate} <span>bpm</span></div>\r\n            <div className=\"summary-detail\">\r\n              <span>{isSelectedEntry ? 'Exact value' : 'Latest reading'}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {displayData.weight !== null && (\r\n          <div className=\"summary-card\">\r\n            <div className=\"summary-header\">\r\n              <span className=\"health-icon weight\">{icons.weight}</span>\r\n              <h3>Weight</h3>\r\n            </div>\r\n            <div className=\"summary-value\">{displayData.weight} <span>kg</span></div>\r\n            <div className=\"summary-detail\">\r\n              <span>{isSelectedEntry ? 'Exact value' : 'Latest reading'}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {displayData.glucoseLevel !== null && (\r\n          <div className=\"summary-card\">\r\n            <div className=\"summary-header\">\r\n              <span className=\"health-icon glucose\">{icons.glucose}</span>\r\n              <h3>Glucose Level</h3>\r\n            </div>\r\n            <div className=\"summary-value\">{displayData.glucoseLevel} <span>mg/dL</span></div>\r\n            <div className=\"summary-detail\">\r\n              <span>{isSelectedEntry ? 'Exact value' : 'Latest reading'}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthSummary;"],"names":["icons","capitalizeWords","str","split","map","word","charAt","toUpperCase","slice","toLowerCase","join","PatientRecords","patientId","useParams","navigate","useNavigate","currentUser","useAuth","patient","setPatient","useState","records","setRecords","loading","setLoading","error","setError","selectedRecord","setSelectedRecord","confirmDelete","setConfirmDelete","deleteLoading","setDeleteLoading","useEffect","role","async","patientResponse","patientAPI","getPatientById","data","success","recordsResponse","getPatientRecords","err","console","fetchData","formatDate","dateString","Date","toLocaleDateString","year","month","day","canDelete","record","doctor","_id","id","_jsx","className","children","_jsxs","date","onClick","log","healthAPI","deleteHealthRecord","prevRecords","filter","_err$response","_err$response2","_err$response2$data","response","message","disabled","handleCancelDelete","name","Link","to","concat","email","gender","dateOfBirth","HealthSummary","summary","selectedEntry","length","handleRecordClick","bloodPressure","systolic","diastolic","heartRate","weight","glucoseLevel","symptoms","medications","notes","e","handleDeleteClick","stopPropagation","_ref","_displayData$bloodPre","_displayData$bloodPre2","displayData","Object","keys","isSelectedEntry"],"sourceRoot":""}