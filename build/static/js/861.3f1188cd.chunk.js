"use strict";(self.webpackChunkmediconnect_frontend=self.webpackChunkmediconnect_frontend||[]).push([[861],{861:(e,t,a)=>{a.r(t),a.d(t,{default:()=>d});var n=a(43),s=a(996),i=a(528),c=a(535),l=a(579);const d=()=>{const[e,t]=(0,n.useState)([]),[a,d]=(0,n.useState)(!0),[o,r]=(0,n.useState)(""),[p,m]=(0,n.useState)(!1),[u,h]=(0,n.useState)("all"),{currentUser:g}=(0,i.A)(),x=(0,n.useCallback)((async()=>{try{d(!0);const e={};e.status="all"!==u?u:"all",console.log("Fetching appointments with params:",e);const a=await s.Es.getMyAppointments(e);a.data.success?(console.log("Received ".concat(a.data.data.length," appointments")),t(a.data.data),r("")):r("Failed to fetch appointments")}catch(e){console.error("Error fetching appointments:",e),r("Failed to fetch appointments. Please try again later.")}finally{d(!1)}}),[u]);(0,n.useEffect)((()=>{x()}),[x]);const j=async function(e,a){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";try{m(!0);const i=await s.Es.updateAppointmentStatus(e,a,n);i.data.success?t((t=>t.map((t=>t._id===e?i.data.data:t)))):r("Failed to update appointment status")}catch(i){console.error("Error updating appointment status:",i),r("Failed to update status. Please try again later.")}finally{m(!1)}},b=async e=>{if(window.confirm("Are you sure you want to cancel this appointment?"))try{m(!0);(await s.Es.cancelAppointment(e)).data.success?x():r("Failed to cancel appointment")}catch(t){console.error("Error cancelling appointment:",t),r("Failed to cancel appointment. Please try again later.")}finally{m(!1)}},f=e=>{const t=new Date(e);return(0,c.GP)(t,"MMMM d, yyyy")},v=e=>{switch(e){case"pending":return"badge badge-warning";case"confirmed":return"badge badge-success";case"cancelled":return"badge badge-danger";case"completed":return"badge badge-info";default:return"badge badge-secondary"}};if(a)return(0,l.jsx)("div",{className:"loading",children:"Loading appointments..."});const y="doctor"===g.role;return(0,l.jsxs)("div",{className:"my-appointments",children:[(0,l.jsx)("h1",{children:y?"Patient Appointments":"My Appointments"}),o&&(0,l.jsx)("div",{className:"alert alert-danger",children:o}),(0,l.jsx)("div",{className:"filters mb-4",children:(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{htmlFor:"statusFilter",children:"Filter by Status:"}),(0,l.jsxs)("select",{id:"statusFilter",className:"form-control",value:u,onChange:e=>h(e.target.value),children:[(0,l.jsx)("option",{value:"all",children:"All Appointments"}),(0,l.jsx)("option",{value:"pending",children:"Pending"}),(0,l.jsx)("option",{value:"confirmed",children:"Confirmed"}),(0,l.jsx)("option",{value:"cancelled",children:"Cancelled"}),(0,l.jsx)("option",{value:"completed",children:"Completed"})]})]})}),0===e.length?(0,l.jsx)("div",{className:"no-appointments",children:(0,l.jsx)("p",{children:"No appointments found for the selected filter."})}):(0,l.jsx)("div",{className:"appointment-list",children:e.map((e=>{return(0,l.jsxs)("div",{className:"appointment-card card mb-3",children:[(0,l.jsx)("div",{className:"card-header d-flex justify-content-between align-items-center",children:(0,l.jsxs)("div",{children:[(0,l.jsx)("span",{className:v(e.status),children:(a=e.status,a.charAt(0).toUpperCase()+a.slice(1))}),e.visited&&(0,l.jsx)("span",{className:"badge badge-success ml-2",children:"Visited"}),(0,l.jsxs)("span",{className:"ml-2",children:[f(e.date)," at ",e.timeSlot]})]})}),(0,l.jsx)("div",{className:"card-body",children:(0,l.jsxs)("div",{className:"row",children:[(0,l.jsxs)("div",{className:"col-md-6",children:["patient"===g.role?(0,l.jsxs)("p",{children:[(0,l.jsx)("strong",{children:"Doctor:"})," ",e.doctor?"".concat(e.doctor.name," (").concat(e.doctor.specialization,")"):"Not assigned"]}):(0,l.jsxs)("p",{children:[(0,l.jsx)("strong",{children:"Patient:"})," ",e.patient?e.patient.name:"Unknown patient"]}),(0,l.jsxs)("p",{children:[(0,l.jsx)("strong",{children:"Reason:"})," ",e.reason]}),e.notes&&(0,l.jsxs)("p",{children:[(0,l.jsx)("strong",{children:"Notes:"})," ",e.notes]})]}),(0,l.jsxs)("div",{className:"col-md-6 text-right",children:["doctor"===g.role&&"pending"===e.status&&(0,l.jsxs)("div",{className:"doctor-actions",children:[(0,l.jsx)("button",{className:"btn btn-success mr-2",onClick:()=>j(e._id,"confirmed"),disabled:p,children:"Confirm"}),(0,l.jsx)("button",{className:"btn btn-danger",onClick:()=>b(e._id),disabled:p,children:"Decline"})]}),"doctor"===g.role&&"confirmed"===e.status&&!e.visited&&(0,l.jsxs)("div",{className:"doctor-actions",children:[(0,l.jsx)("button",{className:"btn btn-info mr-2",onClick:()=>async function(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";try{m(!0);const n=await s.Es.markAppointmentVisited(e,a);n.data.success?t((t=>t.map((t=>t._id===e?n.data.data:t)))):r("Failed to mark appointment as visited")}catch(n){console.error("Error marking appointment as visited:",n),r("Failed to mark as visited. Please try again later.")}finally{m(!1)}}(e._id),disabled:p,children:"Mark as Completed (Visited)"}),(0,l.jsx)("button",{className:"btn btn-secondary",onClick:()=>j(e._id,"completed"),disabled:p,children:"Complete (No Visit)"})]}),"patient"===g.role&&("pending"===e.status||"confirmed"===e.status)&&(0,l.jsx)("button",{className:"btn btn-danger",onClick:()=>b(e._id),disabled:p,children:"Cancel Appointment"})]})]})})]},e._id);var a}))})]})}}}]);
//# sourceMappingURL=861.3f1188cd.chunk.js.map